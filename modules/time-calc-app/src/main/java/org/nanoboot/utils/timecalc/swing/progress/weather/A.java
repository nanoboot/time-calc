package org.nanoboot.utils.timecalc.swing.progress.weather;

import java.util.Arrays;

/**
 * @author pc00289
 * @since 25.03.2024
 */
public class A {
    public static void main(String[] args) {
        String a = "\n"
                   + "            case KeyEvent.VK_UP: {\n"
                   + "                timeCalcApp.visibilityProperty\n"
                   + "                        .setValue(onlyGreyOrNone ? Visibility.GRAY.name()\n"
                   + "                                : Visibility.STRONGLY_COLORED.name());\n"
                   + "                break;\n"
                   + "            }\n"
                   + "\n"
                   + "            case KeyEvent.VK_DOWN:\n"
                   + "            case KeyEvent.VK_PERIOD: {\n"
                   + "                timeCalcApp.visibilityProperty\n"
                   + "                        .setValue(Visibility.NONE.name());\n"
                   + "                break;\n"
                   + "            }\n"
                   + "\n"
                   + "            case KeyEvent.VK_G: {\n"
                   + "                if (visibility.isGray() && !onlyGreyOrNone) {\n"
                   + "                    timeCalcApp.visibilityProperty\n"
                   + "                            .setValue(Visibility.WEAKLY_COLORED.name());\n"
                   + "                } else {\n"
                   + "                    timeCalcApp.visibilityProperty\n"
                   + "                            .setValue(Visibility.GRAY.name());\n"
                   + "                }\n"
                   + "                break;\n"
                   + "            }\n"
                   + "            case KeyEvent.VK_C: {\n"
                   + "                if (!onlyGreyOrNone) {\n"
                   + "                    if (visibility.isStronglyColored()) {\n"
                   + "                        timeCalcApp.visibilityProperty\n"
                   + "                                .setValue(Visibility.WEAKLY_COLORED.name());\n"
                   + "                    } else {\n"
                   + "                        timeCalcApp.visibilityProperty\n"
                   + "                                .setValue(\n"
                   + "                                        Visibility.STRONGLY_COLORED.name());\n"
                   + "                    }\n"
                   + "                } else {\n"
                   + "                    timeCalcApp.visibilityProperty.setValue(Visibility.GRAY\n"
                   + "                            .name());\n"
                   + "                }\n"
                   + "                break;\n"
                   + "            }\n"
                   + "            case KeyEvent.VK_V:\n"
                   + "\n"
                   + "            case KeyEvent.VK_H: {\n"
                   + "                if (visibility.isNone()) {\n"
                   + "                    timeCalcApp.visibilityProperty\n"
                   + "                            .setValue(onlyGreyOrNone ? Visibility.GRAY.name()\n"
                   + "                                    : Visibility.STRONGLY_COLORED.name());\n"
                   + "                } else {\n"
                   + "                    timeCalcApp.visibilityProperty\n"
                   + "                            .setValue(Visibility.NONE.name());\n"
                   + "                }\n"
                   + "                break;\n"
                   + "            }\n"
                   + "            case KeyEvent.VK_SPACE: {\n"
                   + "                if (visibility.isStronglyColored()) {\n"
                   + "                    timeCalcApp.visibilityProperty\n"
                   + "                            .setValue(onlyGreyOrNone ? Visibility.GRAY.name()\n"
                   + "                                    : Visibility.WEAKLY_COLORED.name());\n"
                   + "                }\n"
                   + "                if (visibility.isWeaklyColored()) {\n"
                   + "                    timeCalcApp.visibilityProperty\n"
                   + "                            .setValue(Visibility.GRAY.name());\n"
                   + "                }\n"
                   + "                if (visibility.isGray()) {\n"
                   + "                    timeCalcApp.visibilityProperty\n"
                   + "                            .setValue(Visibility.NONE.name());\n"
                   + "                }\n"
                   + "                if (visibility.isNone()) {\n"
                   + "                    timeCalcApp.visibilityProperty\n"
                   + "                            .setValue(onlyGreyOrNone ? Visibility.GRAY.name()\n"
                   + "                                    : Visibility.STRONGLY_COLORED.name());\n"
                   + "                }\n"
                   + "                break;\n"
                   + "            }\n"
                   + "            case KeyEvent.VK_F2: {\n"
                   + "                mainWindow.doCommand();\n"
                   + "                break;\n"
                   + "            }\n"
                   + "            case KeyEvent.VK_R: {\n"
                   + "                mainWindow.doRestart();\n"
                   + "                break;\n"
                   + "            }\n"
                   + "            case KeyEvent.VK_N: {\n"
                   + "                timeCalcConfiguration.notificationsVisibleProperty.flip();\n"
                   + "                break;\n"
                   + "            }\n"
                   + "            case KeyEvent.VK_W: {\n"
                   + "                mainWindow.openWorkDaysWindow();\n"
                   + "                break;\n"
                   + "            }\n"
                   + "            case KeyEvent.VK_A: {\n"
                   + "                mainWindow.openActivitiesWindow();\n"
                   + "                break;\n"
                   + "            }\n"
                   + "            case KeyEvent.VK_X: {\n"
                   + "                mainWindow.doExit();\n"
                   + "                break;\n"
                   + "            }\n"
                   + "\n"
                   + "            case KeyEvent.VK_S: {\n"
                   + "                mainWindow.openConfigWindow();\n"
                   + "                break;\n"
                   + "            }\n"
                   + "\n"
                   + "            case KeyEvent.VK_J: {\n"
                   + "                if (timeCalcConfiguration.jokesVisibleProperty.isEnabled()) {\n"
                   + "                    Jokes.showRandom();\n"
                   + "                    break;\n"
                   + "                }\n"
                   + "\n"
                   + "            }\n"
                   + "\n"
                   + "            case KeyEvent.VK_P:\n"
                   + "            case KeyEvent.VK_F1: {\n"
                   + "                mainWindow.openHelpWindow();\n"
                   + "                break;\n"
                   + "            }\n"
                   + "            case KeyEvent.VK_U: {\n"
                   + "                mainWindow.doEnableEverything();\n"
                   + "                break;\n"
                   + "\n"
                   + "            }\n"
                   + "            case KeyEvent.VK_I: {\n"
                   + "                mainWindow.doDisableAlmostEverything();\n"
                   + "                break;\n"
                   + "            }\n"
                   + "            case KeyEvent.VK_E: {\n"
                   + "                timeCalcConfiguration.batteryWavesVisibleProperty.flip();\n"
                   + "                break;\n"
                   + "            }\n"
                   + "\n"
                   + "            case KeyEvent.VK_B: {\n"
                   + "                MainWindow.hideShowFormsCheckBox\n"
                   + "                        .setSelected(!MainWindow.hideShowFormsCheckBox.isSelected());\n"
                   + "                break;\n"
                   + "            }\n"
                   + "            case KeyEvent.VK_F: {\n"
                   + "\n"
                   + "                if (FileConstants.TIME_CALC_PROFILES_TXT_FILE.exists()) {\n"
                   + "                    try {\n"
                   + "                        Utils.showNotification(Utils.readTextFromFile(\n"
                   + "                                FileConstants.TIME_CALC_PROFILES_TXT_FILE),\n"
                   + "                                15000, 200);\n"
                   + "                    } catch (IOException ioException) {\n"
                   + "                        ioException.printStackTrace();\n"
                   + "                        Utils.showNotification(\n"
                   + "                                \"Error: \" + ioException.getMessage());\n"
                   + "                    }\n"
                   + "                } else {\n"
                   + "                    Utils.showNotification(\n"
                   + "                            \"Warning: There are no numbers assigned to profiles. Update file: \"\n"
                   + "                            + FileConstants.TIME_CALC_PROFILES_TXT_FILE\n"
                   + "                                    .getAbsolutePath() + \".\");\n"
                   + "                }\n"
                   + "                break;\n"
                   + "            }\n"
                   + "            case KeyEvent.VK_Q: {\n"
                   + "                timeCalcConfiguration.squareVisibleProperty.flip();\n"
                   + "                break;\n"
                   + "            }\n"
                   + "            case KeyEvent.VK_L: {\n"
                   + "                timeCalcConfiguration.circleVisibleProperty.flip();\n"
                   + "                break;\n"
                   + "            }\n"
                   + "            case KeyEvent.VK_Y: {\n"
                   + "                timeCalcConfiguration.smileysVisibleOnlyIfMouseMovingOverProperty\n"
                   + "                        .flip();\n"
                   + "                if (timeCalcConfiguration.smileysVisibleOnlyIfMouseMovingOverProperty.isDisabled() && timeCalcConfiguration.smileysVisibleProperty.isDisabled()) {\n"
                   + "                    timeCalcConfiguration.smileysVisibleProperty.enable();\n"
                   + "                }\n"
                   + "                break;\n"
                   + "            }\n"
                   + "            case KeyEvent.VK_M: {\n"
                   + "                timeCalcConfiguration.walkingHumanVisibleProperty.flip();\n"
                   + "                break;\n"
                   + "            }\n"
                   + "            case KeyEvent.VK_LEFT: {\n"
                   + "                switchProfile(true, false);\n"
                   + "                break;\n"
                   + "            }\n"
                   + "            case KeyEvent.VK_RIGHT: {\n"
                   + "                switchProfile(false, true);\n"
                   + "                break;\n"
                   + "            }\n"
                   + "            case KeyEvent.VK_D: {\n"
                   + "                timeCalcConfiguration.testYearCustomProperty.setValue(Integer.MAX_VALUE);\n"
                   + "                timeCalcConfiguration.testMonthCustomProperty.setValue(Integer.MAX_VALUE);\n"
                   + "                timeCalcConfiguration.testDayCustomProperty.setValue(Integer.MAX_VALUE);\n"
                   + "                timeCalcConfiguration.testHourCustomProperty.setValue(Integer.MAX_VALUE);\n"
                   + "                timeCalcConfiguration.testMinuteCustomProperty.setValue(Integer.MAX_VALUE);\n"
                   + "                timeCalcConfiguration.testSecondCustomProperty.setValue(Integer.MAX_VALUE);\n"
                   + "                timeCalcConfiguration.testMillisecondCustomProperty.setValue(Integer.MAX_VALUE);\n"
                   + "                Utils.showNotification(timeCalcConfiguration.print(), 15000, 400);\n"
                   + "                this.mainWindow.resetSpeed();\n"
                   + "                break;\n"
                   + "            }\n"
                   + "\n"
                   + "            case KeyEvent.VK_K: {\n"
                   + "                if (timeCalcConfiguration.clockVisibleProperty.isEnabled()) {\n"
                   + "                    timeCalcConfiguration.clockVisibleProperty.disable();\n"
                   + "                } else {\n"
                   + "                    timeCalcConfiguration.clockVisibleProperty.enable();\n"
                   + "                    timeCalcConfiguration.clockHandsLongVisibleProperty.enable();\n"
                   + "                    timeCalcConfiguration.clockHandsColoredProperty.enable();\n"
                   + "                    timeCalcConfiguration.clockHandsHourVisibleProperty.enable();\n"
                   + "                    timeCalcConfiguration.clockHandsMinuteVisibleProperty.enable();\n"
                   + "                    timeCalcConfiguration.clockHandsSecondVisibleProperty.enable();\n"
                   + "                    timeCalcConfiguration.clockHandsMillisecondVisibleProperty.enable();\n"
                   + "                    timeCalcConfiguration.clockBorderVisibleProperty.enable();\n"
                   + "                    timeCalcConfiguration.clockBorderOnlyHoursProperty.disable();\n"
                   + "                    timeCalcConfiguration.clockNumbersVisibleProperty.enable();\n"
                   + "                    timeCalcConfiguration.clockCircleVisibleProperty.enable();\n"
                   + "                    timeCalcConfiguration.clockCircleStrongBorderProperty.disable();\n"
                   + "                    timeCalcConfiguration.clockCircleBorderColorProperty.setValue(\"0,0,255\");\n"
                   + "                    timeCalcConfiguration.clockCentreCircleVisibleProperty.enable();\n"
                   + "                    timeCalcConfiguration.clockCentreCircleBlackProperty.disable();\n"
                   + "                    timeCalcConfiguration.clockProgressVisibleOnlyIfMouseMovingOverProperty.disable();\n"
                   + "                    timeCalcConfiguration.clockDateVisibleOnlyIfMouseMovingOverProperty.disable();\n"
                   + "                }\n"
                   + "                break;\n"
                   + "            }\n"
                   + "            case KeyEvent.VK_Z: {";
        Arrays.stream(a.split("\n")).filter(l->l.contains("VK_"))
                .map(l->l.replace("case KeyEvent.VK_",""))
                .map(l->l.replace(": {","")).sorted()
                .forEach(System.out::println);
    }
}
